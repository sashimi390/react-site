{"version":3,"sources":["api.js","Chart.js","App.js","index.js"],"names":["getData","a","fetch","response","json","data","MyResponsiveBar","style","width","height","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","colors","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","animate","motionStiffness","motionDamping","Loading","Header","className","Table","props","datas","map","name_ja","pcr","cases","severe","deaths","last_updated","cases_date","Form","onSubmit","event","preventDefault","breed","target","elements","onFormSubmit","value","name","defaultValue","Main","useState","setDatas","table_datas","tableDatas","useEffect","then","sort","b","Chart","find","v","Footer","href","App","render","document","querySelector"],"mappings":"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","file":"static/js/main.a3a0e85b.chunk.js","sourcesContent":["export async function getData() {\n    const url = \"https://covid19-japan-web-api.vercel.app/api/v1/prefectures\"\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n}","// install (please make sure versions match peerDependencies)\n// yarn add @nivo/core @nivo/bar\nimport { ResponsiveBar } from '@nivo/bar'\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n\nconst MyResponsiveBar = ({ data /* see data tab */ }) => {\n    if (data == null)\n        return \"\";\n    return (\n        <div style={{ width: \"100%\", height: \"500px\" }}>\n            <ResponsiveBar\n                data={data}\n                keys={['deaths', 'cases']}\n                indexBy=\"name_ja\"\n                margin={{ top: 0, right: 80, bottom: 80, left: 80 }}\n                padding={0.1}\n                valueScale={{ type: 'linear' }}\n                indexScale={{ type: 'band', round: true }}\n                colors={{ scheme: 'nivo' }}\n                defs={[\n                    {\n                        id: 'deaths',\n                        type: 'patternDots',\n                        background: 'inherit',\n                        color: '#ff63c9',\n                        size: 4,\n                        padding: 1,\n                        stagger: true\n                    },\n                    {\n                        id: 'cases',\n                        type: 'patternLines',\n                        background: 'inherit',\n                        color: '#eed312',\n                        rotation: -45,\n                        lineWidth: 6,\n                        spacing: 10\n                    }\n                ]}\n                fill={[\n                    {\n                        match: {\n                            id: 'fries'\n                        },\n                        id: 'dots'\n                    },\n                    {\n                        match: {\n                            id: 'sandwich'\n                        },\n                        id: 'lines'\n                    }\n                ]}\n                borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    tickSize: 10,\n                    tickPadding: 10,\n                    tickRotation: -45,\n                    legend: '都道府県',\n                    legendPosition: 'middle',\n                    legendOffset: 60\n                }}\n                axisLeft={{\n                    tickSize: 12,\n                    tickPadding: 0,\n                    tickRotation: 30,\n                    legend: '感染者数と検査数',\n                    legendPosition: 'middle',\n                    legendOffset: -60\n                }}\n                labelSkipWidth={12}\n                labelSkipHeight={12}\n                labelTextColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n                legends={[\n                    {\n                        dataFrom: 'keys',\n                        anchor: 'bottom-right',\n                        direction: 'column',\n                        justify: false,\n                        translateX: 120,\n                        translateY: 0,\n                        itemsSpacing: 10,\n                        itemWidth: 100,\n                        itemHeight: 20,\n                        itemDirection: 'left-to-right',\n                        itemOpacity: 0.85,\n                        symbolSize: 20,\n                        effects: [\n                            {\n                                on: 'hover',\n                                style: {\n                                    itemOpacity: 1\n                                }\n                            }\n                        ]\n                    }\n                ]}\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n            />\n        </div>\n    );\n\n}\nexport default MyResponsiveBar;","import { useEffect, useState } from \"react\";\nimport { getData } from \"./api\";\nimport Chart from \"./Chart\";//node.jsでは拡張子いらない(.jsとか)\n\nfunction Loading() {\n    return <p>Loading...</p>;\n}\n\nfunction Header() {\n    return (\n        <header className=\"hero is-small is-success is-bold\">\n            <div className=\"hero-body\">\n                <h1 className=\"title\">Covid-19</h1>\n                <p className=\"subtitle\">\n                    日本のコロナ状況\n          </p>\n            </div>\n        </header>\n    );\n}\n\nfunction Table(props) {//表の表示\n    const { datas } = props;\n    if (datas == null)\n        return <Loading />;\n    return (\n        <table className=\"table is-striped\">\n            <caption>日本のコロナ</caption>\n            <thead>\n                <tr>\n                    <th>都道府県</th>{/* 横 */}\n                    <th>PCR検査数</th>\n                    <th>累計感染者数</th>\n                    <th>重症者数</th>\n                    <th>死者数</th>\n                    <th>データ更新日</th>\n                </tr>\n            </thead>\n            <tbody>\n\n                {datas.map(data => {\n                    return (\n                        <tr key={data.id}>\n                            <td>{data.name_ja}</td>\n                            <td>{data.pcr}件</td>\n                            <td>{data.cases}人</td>\n                            <td>{data.severe}人</td>\n                            <td>{data.deaths}人</td>\n                            <td>{data.last_updated.cases_date}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table >\n    );\n}\n\nfunction Form(props) {\n    const { datas } = props;\n    if (datas == null)\n        return <Loading />;\n    function handleSubmit(event) {\n        event.preventDefault();\n        const { breed } = event.target.elements;\n        props.onFormSubmit(breed.value);\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"field has-addons\" >\n                    <div className=\"control is-expanded\" >\n                        <div className=\"select is-fullwidth is-link\" >\n                            <select name=\"breed\" defaultValue=\"北海道\" >\n                                {datas.map(data => {\n                                    return (\n                                        <option value={data.name_ja} >{data.name_ja}</option >\n                                    );\n                                })}\n                                <option value=\"全て\" >全国を表示する</option >\n                            </select >\n                        </div >\n                    </div >\n                    <div className=\"control\" >\n                        <button type=\"submit\" className=\"button is-link is-focused is-rounded\" >\n                            Reload</button >\n                    </div >\n                </div >\n            </form >\n        </div >\n    );\n}\n\n\nfunction Main() {\n    const [datas, setDatas] = useState(null);\n    const [table_datas, tableDatas] = useState(null);\n\n    useEffect(() => {\n        getData().then((datas) => {\n            datas.sort((a, b) => b.cases - a.cases)\n            setDatas(datas);\n            tableDatas(datas);\n        });\n    }, []);\n\n    function reloadData(value) {\n        getData().then((table_datas) => {\n            if (value !== \"全て\")\n                table_datas = [table_datas.find(v => v.name_ja === value)]\n            tableDatas(table_datas);\n        });\n    }\n    return (\n        <main>\n            <section className=\"section\">\n                <div className=\"container\">\n                    {/* <Form onFormSubmit={reloadData} datas={datas} /> */}\n                </div>\n            </section>\n            <section className=\"section\">\n                <div className=\"container\">\n                    <Chart data={datas} />\n                    <Form onFormSubmit={reloadData} datas={datas} />\n                    <Table datas={table_datas} />\n                </div>\n            </section>\n        </main>\n    );\n}\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n                <p>data are retrieved from COVID-19</p>\n                <p>\n                    <a href=\"https://covid19-japan-web-api.vercel.app/api/v1/prefectures\">Donate to COVID-19 API</a>\n                </p>\n            </div>\n        </footer>\n    );\n}\n\nfunction App() {\n    return (\n        <div>\n            <Header />\n            <Main />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n\n","import \"bulma/css/bulma.css\";\n\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#content\"));"],"sourceRoot":""}